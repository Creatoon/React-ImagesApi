{"version":3,"sources":["components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["SearchBar","state","term","event","preventDefault","this","props","onSubmit","className","onFormSubmission","type","value","onChange","e","setState","target","React","Component","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","image","description","urls","style","gridRowEnd","alt","src","regular","ref","ImageList","images","map","id","App","onSearchSubmit","a","axios","method","url","params","query","headers","Authorization","response","data","results","marginTop","ReactDom","render","document","getElementById"],"mappings":"0OA2BeA,E,4MAvBZC,MAAQ,CAAEC,KAAM,I,sDAEhB,SAAiBC,GACdA,EAAMC,iBAENC,KAAKC,MAAMC,SAASF,KAAKJ,MAAMC,Q,oBAGlC,WAAU,IAAD,OAEN,OACG,qBAAKM,UAAU,aAAf,SACG,sBAAMA,UAAU,UAAUD,SAAU,SAACJ,GAAD,OAAW,EAAKM,iBAAiBN,IAArE,SACG,sBAAKK,UAAU,QAAf,UACG,iDACA,uBAAOE,KAAK,OAAOC,MAAON,KAAKJ,MAAMC,KAAMU,SAAU,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAACZ,KAAMW,EAAEE,OAAOJ,sB,GAjBlFK,IAAMC,WCkCfC,G,wDAjCZ,WAAYZ,GAAQ,IAAD,8BAChB,cAAMA,IASTa,SAAW,WACR,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAE/BC,EAAQC,KAAKC,KAAMN,EAAS,GAAM,GAExC,EAAKN,SAAS,CAAEU,WAbhB,EAAKvB,MAAQ,CAAEuB,MAAO,GACtB,EAAKH,SAAWL,IAAMW,YAHN,E,qDAMnB,WACGtB,KAAKgB,SAASC,QAAQM,iBAAiB,OAAQvB,KAAKc,Y,oBAWvD,WACG,MAA8Bd,KAAKC,MAAMuB,MAAjCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,KAErB,OACG,qBAAKC,MAAO,CAACC,WAAW,QAAD,OAAU5B,KAAKJ,MAAMuB,QAA5C,SACG,qBACGU,IAAKJ,EACLK,IAAKJ,EAAKK,QACVC,IAAKhC,KAAKgB,iB,GA3BDL,IAAMC,YCefqB,EAXG,SAAChC,GAEhB,IAAMiC,EAASjC,EAAMiC,OAAOC,KAAI,SAAAX,GAAK,OAAI,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAMY,OAE/D,OACG,qBAAKjC,UAAU,aAAf,SACK+B,KCuBIG,E,4MA3BZzC,MAAQ,CAAEsC,OAAQ,I,EAElBI,e,uCAAiB,WAAOzC,GAAP,eAAA0C,EAAA,sEACSC,IAAM,CAC1BC,OAAQ,MACRC,IAAK,yCACLC,OAAQ,CACLC,MAAO/C,GAEVgD,QAAS,CACNC,cAAe,2DARP,OACRC,EADQ,OAYd,EAAKtC,SAAS,CAAEyB,OAAQa,EAASC,KAAKC,UAZxB,2C,kGAejB,WACG,OACG,sBAAK9C,UAAU,eAAewB,MAAO,CAACuB,UAAW,QAAjD,UACG,cAAC,EAAD,CAAWhD,SAAUF,KAAKsC,iBAC1B,cAAC,EAAD,CAAWJ,OAASlC,KAAKJ,MAAMsC,gB,GAvBzBvB,IAAMC,WCAxBuC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7bfc5344.chunk.js","sourcesContent":["import React from 'react';\n\nclass SearchBar extends React.Component {\n\n   state = { term: '' };\n\n   onFormSubmission(event) {\n      event.preventDefault();\n\n      this.props.onSubmit(this.state.term);\n   }\n\n   render() {\n\n      return (\n         <div className=\"ui segment\">\n            <form className=\"ui form\" onSubmit={(event) => this.onFormSubmission(event)}>\n               <div className=\"field\">\n                  <label>Image Search</label>\n                  <input type=\"text\" value={this.state.term} onChange={e => this.setState({term: e.target.value}) }/>\n               </div>\n            </form>\n         </div>\n      );\n   }\n}\n\nexport default SearchBar;","import React from 'react';\n\nclass ImageCard extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = { spans: 0 };\n      this.imageRef = React.createRef();\n   }\n\n   componentDidMount() {\n      this.imageRef.current.addEventListener('load', this.setSpans);\n   }\n\n   setSpans = () => {\n      const height = this.imageRef.current.clientHeight;\n\n      const spans = Math.ceil((height / 10) + 1);\n\n      this.setState({ spans });\n   }\n\n   render() {\n      const { description, urls } = this.props.image;\n\n      return (\n         <div style={{gridRowEnd: `span ${this.state.spans}`}}>\n            <img\n               alt={description}\n               src={urls.regular}\n               ref={this.imageRef}\n            />\n         </div>\n      )\n   }\n}\n\nexport default ImageCard","import React from 'react';\n\nimport './ImageList.css';\n\nimport ImageCard from './ImageCard';\n\nconst ImageList = (props) => {\n\n   const images = props.images.map(image => <ImageCard key={image.id} image={image} />);\n\n   return (\n      <div className=\"image-list\">\n        {  images }\n      </div>\n   );\n}\n\nexport default ImageList;","import React from 'react';\nimport axios from 'axios';\n\nimport SearchBar from './SearchBar';\nimport ImageList from './ImageList'\n\nclass App extends React.Component  {\n\n   state = { images: [] };\n\n   onSearchSubmit = async (term) => {\n      const response = await axios({\n         method: 'GET',\n         url: 'https://api.unsplash.com/search/photos',\n         params: {\n            query: term\n         },\n         headers: {\n            Authorization: 'Client-ID DllE7VIkSjJf9XAKMdci-5Lvppep1W43DWl_k4XkehU'\n         }\n      });\n\n      this.setState({ images: response.data.results });\n   }\n\n   render() {\n      return (\n         <div className=\"ui container\" style={{marginTop: '10px'}}>\n            <SearchBar onSubmit={this.onSearchSubmit} />\n            <ImageList images={ this.state.images }/>\n         </div>\n      )   \n   }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\n\n// Components\nimport App from './components/App';\n\nReactDom.render(<App />, document.getElementById('root'));"],"sourceRoot":""}